package com.example.jdbcdemo.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.example.jdbcdemo.domain.Article;
import com.example.jdbcdemo.domain.UniqueAbility;
import com.example.jdbcdemo.service.UniqueAbilityManager;

public class ArticleManager {

	private Connection connection;

	private String url = "jdbc:hsqldb:hsql://localhost/workdb";
	
	private String createTableUniqueAbility = "CREATE TABLE UniqueAbility(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(20), description varchar(80), PRIMARY KEY(id))";

	private String createTableArticle = "CREATE TABLE Article(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(20), dmg int, type varchar (20), uniqueAbility_id int, FOREIGN KEY (uniqueAbility_id) REFERENCES UniqueAbility(id))";
	
//	private String createTableMedicine = "CREATE TABLE Medicine(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(20) unique, cost int, toxicity int, pharmacy_id int, FOREIGN KEY(pharmacy_id) REFERENCES PHARMACY(id) ON DELETE CASCADE ON UPDATE CASCADE)";

	
	private PreparedStatement addArticleStmt;
	private PreparedStatement deleteAllArticlesStmt;
	private PreparedStatement getAllArticlesStmt;


	private Statement statement;

	public ArticleManager() {
		try {
			connection = DriverManager.getConnection(url);
			statement = connection.createStatement();

			ResultSet rs1 = connection.getMetaData().getTables(null, null, "UniqueAbility",
					null);
			if (!rs1.next()){
				statement.executeUpdate(createTableUniqueAbility);
			}
			
			
			ResultSet rs2 = connection.getMetaData().getTables(null, null, "Article",
					null);
			if (!rs2.next()){
				statement.executeUpdate(createTableArticle);
			}	

			addArticleStmt = connection.prepareStatement("INSERT INTO Article (name, dmg, type, uniqueAbility_id) VALUES (?,?,?,?)");
			deleteAllArticlesStmt = connection.prepareStatement("DELETE FROM Article");
			getAllArticlesStmt = connection.prepareStatement("SELECT id, name, dmg, type, uniqueAbility_id FROM Article");
			

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	Connection getConnection() {
		return connection;
	}

//	void clearArticles() {
//		try {
//			deleteAllArticlesStmt.executeUpdate();
//		} catch (SQLException e) {
//			e.printStackTrace();
//		}
//	}
//
//	public boolean addArticle(Article article) {
//		int count = 0;
//		try {
//			addArticleStmt.setString(1, article.getName());
//			addArticleStmt.setInt(2, article.getDmg());
//			addArticleStmt.setString(3, article.getType());
//			addArticleStmt.setInt(4, article.getUniqueAbility_id());
//
//			count = addArticleStmt.executeUpdate();
//
//		} catch (SQLException e) {
//			e.printStackTrace();
//		}
//		if(count == 1){
//			return true;
//		}else{
//			return false;
//		}
//	}
//
//	public List<Article> getAllArticle() {
//		List<Article> articles = new ArrayList<Article>();
//
//		try {
//			ResultSet rs = getAllArticlesStmt.executeQuery();
//
//			while (rs.next()) {
//				Article a = new Article();
//				a.setId(rs.getInt("id"));
//				a.setName(rs.getString("name"));
//				a.setDmg(rs.getInt("dmg"));
//				a.setType(rs.getString("type"));
//				a.setUniqueAbility_id(rs.getInt("uniqueAbility_id"));
//				articles.add(a);
//			}
//
//		} catch (SQLException e) {
//			e.printStackTrace();
//		}
//		return articles;
//	}

}
