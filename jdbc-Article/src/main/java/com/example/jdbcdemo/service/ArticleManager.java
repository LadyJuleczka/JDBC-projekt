package com.example.jdbcdemo.service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import com.example.jdbcdemo.domain.Article;

public class ArticleManager {

	private Connection connection;

//	private String url = "jdbc:hsqldb:hsql://localhost/workdb";

	private String createTableArticle = "CREATE TABLE Article(id bigint GENERATED BY DEFAULT AS IDENTITY, name varchar(20), dmg integer, type varchar (20), uniqueAbility_id integer, FOREING KEY(uniqueAbility_id) REFERENCES UniqueAbility(id) ON DELETE CASCADE ON UPDATE CASCADE";

	private PreparedStatement addArticleStmt;
	private PreparedStatement deleteAllArticlesStmt;
	private PreparedStatement getAllArticlesStmt;

	private Statement statement;

	public ArticleManager() {
		try {
			connection = DriverManager.getConnection("jdbc:hsqldb:file:/tmp/testdb;ifexists=false", "SA", "");
			statement = connection.createStatement();

			ResultSet rs = connection.getMetaData().getTables(null, null, null,
					null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("Article".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}

			if (!tableExists)
				statement.executeUpdate(createTableArticle);

			addArticleStmt = connection
					.prepareStatement("INSERT INTO Article (name, dmg, type, uniqueAbility_id) VALUES (?, ?, ?, ?)");
			deleteAllArticlesStmt = connection
					.prepareStatement("DELETE FROM Articles");
			getAllArticlesStmt = connection
					.prepareStatement("SELECT id, name, dmg, type, uniqueAbility_id FROM Article");

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	Connection getConnection() {
		return connection;
	}

	void clearPersons() {
		try {
			deleteAllArticlesStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public int addArticle(Article article) {
		int count = 0;
		try {
			addArticleStmt.setString(1, article.getName());
			addArticleStmt.setInt(2, article.getDmg());
			addArticleStmt.setString(3, article.getType());
			addArticleStmt.setInt(4, article.getUniqueAbility_id());

			count = addArticleStmt.executeUpdate();

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}

	public List<Article> getAllArticle() {
		List<Article> articles = new ArrayList<Article>();

		try {
			ResultSet rs = getAllArticlesStmt.executeQuery();

			while (rs.next()) {
				Article a = new Article();
				a.setId(rs.getInt("id"));
				a.setName(rs.getString("name"));
				a.setDmg(rs.getInt("dmg"));
				a.setType(rs.getString("type"));
				a.setUniqueAbility_id(rs.getInt("uniqueAbility_id"));
				articles.add(a);
			}

		} catch (SQLException e) {
			e.printStackTrace();
		}
		return articles;
	}

}
